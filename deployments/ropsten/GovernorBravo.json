{
  "address": "0x1dE6167F690e156E6B2f0C8fea21BEb16fc27E7F",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "_setProposalThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "_setVotingDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "_setVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV1.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceToken",
      "outputs": [
        {
          "internalType": "contract GovernanceTokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "governanceToken_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingDelay_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalThreshold_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorBravoDelegateStorageV1.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd5a5b8a5faf954eaa2b193f08d780b221ee1dedf56d450c9bbee5246b4b9e145",
  "receipt": {
    "to": null,
    "from": "0xFa02EDF9ebA53Ae811650e409A1da2E6103CDB54",
    "contractAddress": "0x1dE6167F690e156E6B2f0C8fea21BEb16fc27E7F",
    "transactionIndex": 33,
    "gasUsed": "3204113",
    "logsBloom": "0x
    "blockHash": "0x9e64bf11ed96ac100077df45874ad848fc4361d26d62cb3be683a7a8892ae28e",
    "transactionHash": "0xd5a5b8a5faf954eaa2b193f08d780b221ee1dedf56d450c9bbee5246b4b9e145",
    "logs": [],
    "blockNumber": 11180576,
    "cumulativeGasUsed": "6552820",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "6b19c25e1763ccd5ac10ba42d59767d7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"_setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"_setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"_setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV1.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract GovernanceTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governanceToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDelay_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorBravoDelegateStorageV1.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\"},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"}},\"_setProposalThreshold(uint256)\":{\"details\":\"newProposalThreshold must be greater than the hardcoded min\",\"params\":{\"newProposalThreshold\":\"new proposal threshold\"}},\"_setVotingDelay(uint256)\":{\"params\":{\"newVotingDelay\":\"new voting delay, in blocks\"}},\"_setVotingPeriod(uint256)\":{\"params\":{\"newVotingPeriod\":\"new voting period, in blocks\"}},\"cancel(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to cancel\"}},\"castVote(uint256,uint8)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"External function that accepts EIP-712 signatures for voting on proposals.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal\"},\"returns\":{\"calldatas\":\"Calldatas of the proposal actions\",\"signatures\":\"Signatures of the proposal actions\",\"targets\":\"Targets of the proposal actions\",\"values\":\"Values of the proposal actions\"}},\"getReceipt(uint256,address)\":{\"params\":{\"proposalId\":\"the id of proposal\",\"voter\":\"The address of the voter\"},\"returns\":{\"_0\":\"The voting receipt\"}},\"initialize(address,address,uint256,uint256,uint256)\":{\"params\":{\"governanceToken_\":\"The address of the governance token\",\"proposalThreshold_\":\"The initial proposal threshold\",\"timelock_\":\"The address of the Timelock\",\"votingDelay_\":\"The initial voting delay\",\"votingPeriod_\":\"The initial voting period\"}},\"propose(address[],uint256[],string[],bytes[],string)\":{\"params\":{\"calldatas\":\"Calldatas for proposal calls\",\"description\":\"String description of the proposal\",\"signatures\":\"Function signatures for proposal calls\",\"targets\":\"Target addresses for proposal calls\",\"values\":\"Eth values for proposal calls\"},\"returns\":{\"_0\":\"Proposal id of new proposal\"}},\"queue(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to queue\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal\"},\"returns\":{\"_0\":\"Proposal state\"}}},\"version\":1},\"userdoc\":{\"events\":{\"NewAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is accepted, which means admin is updated\"},\"NewImplementation(address,address)\":{\"notice\":\"Emitted when implementation is changed\"},\"NewPendingAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is changed\"},\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the Timelock\"},\"ProposalQueued(uint256,uint256)\":{\"notice\":\"An event emitted when a proposal has been queued in the Timelock\"},\"ProposalThresholdSet(uint256,uint256)\":{\"notice\":\"Emitted when proposal threshold is set\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"},\"VotingDelaySet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting delay is set\"},\"VotingPeriodSet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting period is set\"}},\"kind\":\"user\",\"methods\":{\"BALLOT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the ballot struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"MAX_PROPOSAL_THRESHOLD()\":{\"notice\":\"The maximum setable proposal threshold\"},\"MAX_VOTING_DELAY()\":{\"notice\":\"The max setable voting delay\"},\"MAX_VOTING_PERIOD()\":{\"notice\":\"The max setable voting period\"},\"MIN_PROPOSAL_THRESHOLD()\":{\"notice\":\"The minimum setable proposal threshold\"},\"MIN_VOTING_DELAY()\":{\"notice\":\"The min setable voting delay\"},\"MIN_VOTING_PERIOD()\":{\"notice\":\"The minimum setable voting period\"},\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setProposalThreshold(uint256)\":{\"notice\":\"Admin function for setting the proposal threshold\"},\"_setVotingDelay(uint256)\":{\"notice\":\"Admin function for setting the voting delay\"},\"_setVotingPeriod(uint256)\":{\"notice\":\"Admin function for setting the voting period\"},\"admin()\":{\"notice\":\"Administrator for this contract\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"notice\":\"Cast a vote for a proposal by signature\"},\"castVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal with a reason\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"governanceToken()\":{\"notice\":\"The address of the governance token\"},\"implementation()\":{\"notice\":\"Active brains of Governor\"},\"initialize(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used to initialize the contract during delegator contructor\"},\"latestProposalIds(address)\":{\"notice\":\"The latest proposal for each proposer\"},\"name()\":{\"notice\":\"The name of this contract\"},\"pendingAdmin()\":{\"notice\":\"Pending administrator for this contract\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"proposals(uint256)\":{\"notice\":\"The official record of all proposals ever proposed\"},\"propose(address[],uint256[],string[],bytes[],string)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold\"},\"queue(uint256)\":{\"notice\":\"Queues a proposal of state succeeded\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"},\"timelock()\":{\"notice\":\"The address of the Protocol Timelock\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed, in blocks\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governance/GovernorBravo.sol\":\"GovernorBravo\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/governance/GovernorBravo.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.6;\\n\\nimport \\\"./Interfaces.sol\\\";\\n\\n// solhint-disable const-name-snakecase\\n// solhint-disable private-vars-leading-underscore\\n// solhint-disable not-rely-on-time\\ncontract GovernorBravo is GovernorBravoDelegateStorageV1, GovernorBravoEvents {\\n  /// @notice The name of this contract\\n  string public constant name = \\\"DeFiHelper Governor Bravo\\\";\\n\\n  /// @notice The minimum setable proposal threshold\\n  uint256 public constant MIN_PROPOSAL_THRESHOLD = 50_000e18; // 50,000 DFH\\n\\n  /// @notice The maximum setable proposal threshold\\n  uint256 public constant MAX_PROPOSAL_THRESHOLD = 100_000e18; //100,000 DFH\\n\\n  /// @notice The minimum setable voting period\\n  uint256 public constant MIN_VOTING_PERIOD = 5760; // About 24 hours\\n\\n  /// @notice The max setable voting period\\n  uint256 public constant MAX_VOTING_PERIOD = 80640; // About 2 weeks\\n\\n  /// @notice The min setable voting delay\\n  uint256 public constant MIN_VOTING_DELAY = 1;\\n\\n  /// @notice The max setable voting delay\\n  uint256 public constant MAX_VOTING_DELAY = 40320; // About 1 week\\n\\n  /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n  uint256 public constant quorumVotes = 400000e18; // 400,000 = 4% of DFH\\n\\n  /// @notice The maximum number of actions that can be included in a proposal\\n  uint256 public constant proposalMaxOperations = 10; // 10 actions\\n\\n  /// @notice The EIP-712 typehash for the contract's domain\\n  bytes32 public constant DOMAIN_TYPEHASH =\\n    keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n  /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n  bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\n\\n  /**\\n   * @notice Used to initialize the contract during delegator contructor\\n   * @param timelock_ The address of the Timelock\\n   * @param governanceToken_ The address of the governance token\\n   * @param votingPeriod_ The initial voting period\\n   * @param votingDelay_ The initial voting delay\\n   * @param proposalThreshold_ The initial proposal threshold\\n   */\\n  function initialize(\\n    address timelock_,\\n    address governanceToken_,\\n    uint256 votingPeriod_,\\n    uint256 votingDelay_,\\n    uint256 proposalThreshold_\\n  ) public {\\n    require(address(timelock) == address(0), \\\"GovernorBravo::initialize: can only initialize once\\\");\\n    require(timelock_ != address(0), \\\"GovernorBravo::initialize: invalid timelock address\\\");\\n    require(governanceToken_ != address(0), \\\"GovernorBravo::initialize: invalid governance token address\\\");\\n    require(\\n      votingPeriod_ >= MIN_VOTING_PERIOD && votingPeriod_ <= MAX_VOTING_PERIOD,\\n      \\\"GovernorBravo::initialize: invalid voting period\\\"\\n    );\\n    require(\\n      votingDelay_ >= MIN_VOTING_DELAY && votingDelay_ <= MAX_VOTING_DELAY,\\n      \\\"GovernorBravo::initialize: invalid voting delay\\\"\\n    );\\n    require(\\n      proposalThreshold_ >= MIN_PROPOSAL_THRESHOLD && proposalThreshold_ <= MAX_PROPOSAL_THRESHOLD,\\n      \\\"GovernorBravo::initialize: invalid proposal threshold\\\"\\n    );\\n\\n    admin = timelock_;\\n    timelock = TimelockInterface(timelock_);\\n    governanceToken = GovernanceTokenInterface(governanceToken_);\\n    votingPeriod = votingPeriod_;\\n    votingDelay = votingDelay_;\\n    proposalThreshold = proposalThreshold_;\\n  }\\n\\n  /**\\n   * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold\\n   * @param targets Target addresses for proposal calls\\n   * @param values Eth values for proposal calls\\n   * @param signatures Function signatures for proposal calls\\n   * @param calldatas Calldatas for proposal calls\\n   * @param description String description of the proposal\\n   * @return Proposal id of new proposal\\n   */\\n  function propose(\\n    address[] memory targets,\\n    uint256[] memory values,\\n    string[] memory signatures,\\n    bytes[] memory calldatas,\\n    string memory description\\n  ) public returns (uint256) {\\n    require(\\n      governanceToken.getPriorVotes(msg.sender, block.number - 1) > proposalThreshold,\\n      \\\"GovernorBravo::propose: proposer votes below proposal threshold\\\"\\n    );\\n    require(\\n      targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length,\\n      \\\"GovernorBravo::propose: proposal function information arity mismatch\\\"\\n    );\\n    require(targets.length != 0, \\\"GovernorBravo::propose: must provide actions\\\");\\n    require(targets.length <= proposalMaxOperations, \\\"GovernorBravo::propose: too many actions\\\");\\n\\n    uint256 latestProposalId = latestProposalIds[msg.sender];\\n    if (latestProposalId != 0) {\\n      ProposalState proposersLatestProposalState = state(latestProposalId);\\n      require(\\n        proposersLatestProposalState != ProposalState.Active,\\n        \\\"GovernorBravo::propose: one live proposal per proposer, found an already active proposal\\\"\\n      );\\n      require(\\n        proposersLatestProposalState != ProposalState.Pending,\\n        \\\"GovernorBravo::propose: one live proposal per proposer, found an already pending proposal\\\"\\n      );\\n    }\\n\\n    uint256 startBlock = block.number + votingDelay;\\n    uint256 endBlock = startBlock + votingPeriod;\\n\\n    proposalCount++;\\n    /// @dev https://docs.soliditylang.org/en/v0.7.1/070-breaking-changes.html#mappings-outside-storage\\n    Proposal storage newProposal = proposals[proposalCount];\\n    newProposal.id = proposalCount;\\n    newProposal.proposer = msg.sender;\\n    newProposal.targets = targets;\\n    newProposal.values = values;\\n    newProposal.signatures = signatures;\\n    newProposal.calldatas = calldatas;\\n    newProposal.startBlock = startBlock;\\n    newProposal.endBlock = endBlock;\\n\\n    latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n    emit ProposalCreated(\\n      newProposal.id,\\n      msg.sender,\\n      targets,\\n      values,\\n      signatures,\\n      calldatas,\\n      startBlock,\\n      endBlock,\\n      description\\n    );\\n    return newProposal.id;\\n  }\\n\\n  /**\\n   * @notice Queues a proposal of state succeeded\\n   * @param proposalId The id of the proposal to queue\\n   */\\n  function queue(uint256 proposalId) external {\\n    require(\\n      state(proposalId) == ProposalState.Succeeded,\\n      \\\"GovernorBravo::queue: proposal can only be queued if it is succeeded\\\"\\n    );\\n    Proposal storage proposal = proposals[proposalId];\\n    uint256 eta = block.timestamp + timelock.delay();\\n    for (uint256 i = 0; i < proposal.targets.length; i++) {\\n      queueOrRevertInternal(\\n        proposal.targets[i],\\n        proposal.values[i],\\n        proposal.signatures[i],\\n        proposal.calldatas[i],\\n        eta\\n      );\\n    }\\n    proposal.eta = eta;\\n    emit ProposalQueued(proposalId, eta);\\n  }\\n\\n  function queueOrRevertInternal(\\n    address target,\\n    uint256 value,\\n    string memory signature,\\n    bytes memory data,\\n    uint256 eta\\n  ) internal {\\n    require(\\n      !timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))),\\n      \\\"GovernorBravo::queueOrRevertInternal: identical proposal action already queued at eta\\\"\\n    );\\n    timelock.queueTransaction(target, value, signature, data, eta);\\n  }\\n\\n  /**\\n   * @notice Executes a queued proposal if eta has passed\\n   * @param proposalId The id of the proposal to execute\\n   */\\n  function execute(uint256 proposalId) external payable {\\n    require(\\n      state(proposalId) == ProposalState.Queued,\\n      \\\"GovernorBravo::execute: proposal can only be executed if it is queued\\\"\\n    );\\n    Proposal storage proposal = proposals[proposalId];\\n    proposal.executed = true;\\n    for (uint256 i = 0; i < proposal.targets.length; i++) {\\n      timelock.executeTransaction{value: proposal.values[i]}(\\n        proposal.targets[i],\\n        proposal.values[i],\\n        proposal.signatures[i],\\n        proposal.calldatas[i],\\n        proposal.eta\\n      );\\n    }\\n    emit ProposalExecuted(proposalId);\\n  }\\n\\n  /**\\n   * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\n   * @param proposalId The id of the proposal to cancel\\n   */\\n  function cancel(uint256 proposalId) external {\\n    require(state(proposalId) != ProposalState.Executed, \\\"GovernorBravo::cancel: cannot cancel executed proposal\\\");\\n\\n    Proposal storage proposal = proposals[proposalId];\\n    require(\\n      msg.sender == proposal.proposer ||\\n        governanceToken.getPriorVotes(proposal.proposer, block.number - 1) < proposalThreshold,\\n      \\\"GovernorBravo::cancel: proposer above threshold\\\"\\n    );\\n\\n    proposal.canceled = true;\\n    for (uint256 i = 0; i < proposal.targets.length; i++) {\\n      timelock.cancelTransaction(\\n        proposal.targets[i],\\n        proposal.values[i],\\n        proposal.signatures[i],\\n        proposal.calldatas[i],\\n        proposal.eta\\n      );\\n    }\\n\\n    emit ProposalCanceled(proposalId);\\n  }\\n\\n  /**\\n   * @notice Gets actions of a proposal\\n   * @param proposalId the id of the proposal\\n   * @return targets Targets of the proposal actions\\n   * @return values Values of the proposal actions\\n   * @return signatures Signatures of the proposal actions\\n   * @return calldatas Calldatas of the proposal actions\\n   */\\n  function getActions(uint256 proposalId)\\n    external\\n    view\\n    returns (\\n      address[] memory targets,\\n      uint256[] memory values,\\n      string[] memory signatures,\\n      bytes[] memory calldatas\\n    )\\n  {\\n    Proposal storage p = proposals[proposalId];\\n    return (p.targets, p.values, p.signatures, p.calldatas);\\n  }\\n\\n  /**\\n   * @notice Gets the receipt for a voter on a given proposal\\n   * @param proposalId the id of proposal\\n   * @param voter The address of the voter\\n   * @return The voting receipt\\n   */\\n  function getReceipt(uint256 proposalId, address voter) external view returns (Receipt memory) {\\n    return proposals[proposalId].receipts[voter];\\n  }\\n\\n  /**\\n   * @notice Gets the state of a proposal\\n   * @param proposalId The id of the proposal\\n   * @return Proposal state\\n   */\\n  function state(uint256 proposalId) public view returns (ProposalState) {\\n    require(proposalCount >= proposalId, \\\"GovernorBravo::state: invalid proposal id\\\");\\n    Proposal storage proposal = proposals[proposalId];\\n    if (proposal.canceled) {\\n      return ProposalState.Canceled;\\n    } else if (block.number <= proposal.startBlock) {\\n      return ProposalState.Pending;\\n    } else if (block.number <= proposal.endBlock) {\\n      return ProposalState.Active;\\n    } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes) {\\n      return ProposalState.Defeated;\\n    } else if (proposal.eta == 0) {\\n      return ProposalState.Succeeded;\\n    } else if (proposal.executed) {\\n      return ProposalState.Executed;\\n    } else if (block.timestamp >= proposal.eta + timelock.GRACE_PERIOD()) {\\n      return ProposalState.Expired;\\n    } else {\\n      return ProposalState.Queued;\\n    }\\n  }\\n\\n  /**\\n   * @notice Cast a vote for a proposal\\n   * @param proposalId The id of the proposal to vote on\\n   * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n   */\\n  function castVote(uint256 proposalId, uint8 support) external {\\n    emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), \\\"\\\");\\n  }\\n\\n  /**\\n   * @notice Cast a vote for a proposal with a reason\\n   * @param proposalId The id of the proposal to vote on\\n   * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n   * @param reason The reason given for the vote by the voter\\n   */\\n  function castVoteWithReason(\\n    uint256 proposalId,\\n    uint8 support,\\n    string calldata reason\\n  ) external {\\n    emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), reason);\\n  }\\n\\n  /**\\n   * @notice Cast a vote for a proposal by signature\\n   * @dev External function that accepts EIP-712 signatures for voting on proposals.\\n   */\\n  function castVoteBySig(\\n    uint256 proposalId,\\n    uint8 support,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external {\\n    bytes32 domainSeparator = keccak256(\\n      abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainIdInternal(), address(this))\\n    );\\n    bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n    bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    address signatory = ecrecover(digest, v, r, s);\\n    require(signatory != address(0), \\\"GovernorBravo::castVoteBySig: invalid signature\\\");\\n    emit VoteCast(signatory, proposalId, support, castVoteInternal(signatory, proposalId, support), \\\"\\\");\\n  }\\n\\n  /**\\n   * @notice Internal function that caries out voting logic\\n   * @param voter The voter that is casting their vote\\n   * @param proposalId The id of the proposal to vote on\\n   * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n   * @return The number of votes cast\\n   */\\n  function castVoteInternal(\\n    address voter,\\n    uint256 proposalId,\\n    uint8 support\\n  ) internal returns (uint96) {\\n    require(state(proposalId) == ProposalState.Active, \\\"GovernorBravo::castVoteInternal: voting is closed\\\");\\n    require(support <= 2, \\\"GovernorBravo::castVoteInternal: invalid vote type\\\");\\n    Proposal storage proposal = proposals[proposalId];\\n    Receipt storage receipt = proposal.receipts[voter];\\n    require(receipt.hasVoted == false, \\\"GovernorBravo::castVoteInternal: voter already voted\\\");\\n    uint96 votes = governanceToken.getPriorVotes(voter, proposal.startBlock);\\n\\n    if (support == 0) {\\n      proposal.againstVotes = proposal.againstVotes + votes;\\n    } else if (support == 1) {\\n      proposal.forVotes = proposal.forVotes + votes;\\n    } else if (support == 2) {\\n      proposal.abstainVotes = proposal.abstainVotes + votes;\\n    }\\n\\n    receipt.hasVoted = true;\\n    receipt.support = support;\\n    receipt.votes = votes;\\n\\n    return votes;\\n  }\\n\\n  /**\\n   * @notice Admin function for setting the voting delay\\n   * @param newVotingDelay new voting delay, in blocks\\n   */\\n  function _setVotingDelay(uint256 newVotingDelay) external {\\n    require(msg.sender == admin, \\\"GovernorBravo::_setVotingDelay: admin only\\\");\\n    require(\\n      newVotingDelay >= MIN_VOTING_DELAY && newVotingDelay <= MAX_VOTING_DELAY,\\n      \\\"GovernorBravo::_setVotingDelay: invalid voting delay\\\"\\n    );\\n    uint256 oldVotingDelay = votingDelay;\\n    votingDelay = newVotingDelay;\\n\\n    emit VotingDelaySet(oldVotingDelay, votingDelay);\\n  }\\n\\n  /**\\n   * @notice Admin function for setting the voting period\\n   * @param newVotingPeriod new voting period, in blocks\\n   */\\n  function _setVotingPeriod(uint256 newVotingPeriod) external {\\n    require(msg.sender == admin, \\\"GovernorBravo::_setVotingPeriod: admin only\\\");\\n    require(\\n      newVotingPeriod >= MIN_VOTING_PERIOD && newVotingPeriod <= MAX_VOTING_PERIOD,\\n      \\\"GovernorBravo::_setVotingPeriod: invalid voting period\\\"\\n    );\\n    uint256 oldVotingPeriod = votingPeriod;\\n    votingPeriod = newVotingPeriod;\\n\\n    emit VotingPeriodSet(oldVotingPeriod, votingPeriod);\\n  }\\n\\n  /**\\n   * @notice Admin function for setting the proposal threshold\\n   * @dev newProposalThreshold must be greater than the hardcoded min\\n   * @param newProposalThreshold new proposal threshold\\n   */\\n  function _setProposalThreshold(uint256 newProposalThreshold) external {\\n    require(msg.sender == admin, \\\"GovernorBravo::_setProposalThreshold: admin only\\\");\\n    require(\\n      newProposalThreshold >= MIN_PROPOSAL_THRESHOLD && newProposalThreshold <= MAX_PROPOSAL_THRESHOLD,\\n      \\\"GovernorBravo::_setProposalThreshold: invalid proposal threshold\\\"\\n    );\\n    uint256 oldProposalThreshold = proposalThreshold;\\n    proposalThreshold = newProposalThreshold;\\n\\n    emit ProposalThresholdSet(oldProposalThreshold, proposalThreshold);\\n  }\\n\\n  /**\\n   * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n   * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n   * @param newPendingAdmin New pending admin.\\n   */\\n  function _setPendingAdmin(address newPendingAdmin) external {\\n    // Check caller = admin\\n    require(msg.sender == admin, \\\"GovernorBravo:_setPendingAdmin: admin only\\\");\\n\\n    // Save current value, if any, for inclusion in log\\n    address oldPendingAdmin = pendingAdmin;\\n\\n    // Store pendingAdmin with value newPendingAdmin\\n    pendingAdmin = newPendingAdmin;\\n\\n    // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\\n    emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\n  }\\n\\n  /**\\n   * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\n   * @dev Admin function for pending admin to accept role and update admin\\n   */\\n  function _acceptAdmin() external {\\n    // Check caller is pendingAdmin and pendingAdmin \\u2260 address(0)\\n    require(msg.sender == pendingAdmin && msg.sender != address(0), \\\"GovernorBravo:_acceptAdmin: pending admin only\\\");\\n\\n    // Save current values for inclusion in log\\n    address oldAdmin = admin;\\n    address oldPendingAdmin = pendingAdmin;\\n\\n    // Store admin with value pendingAdmin\\n    admin = pendingAdmin;\\n\\n    // Clear the pending value\\n    pendingAdmin = address(0);\\n\\n    emit NewAdmin(oldAdmin, admin);\\n    emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\\n  }\\n\\n  function getChainIdInternal() internal view returns (uint256) {\\n    uint256 chainId;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      chainId := chainid()\\n    }\\n    return chainId;\\n  }\\n}\\n\",\"keccak256\":\"0x446165827bc968c598fd793abd61087034836e52ce86e6e11f8a7283250e0ae5\",\"license\":\"BSD-3-Clause\"},\"contracts/governance/Interfaces.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.6;\\n\\ncontract GovernorBravoEvents {\\n  /// @notice An event emitted when a new proposal is created\\n  event ProposalCreated(\\n    uint256 id,\\n    address proposer,\\n    address[] targets,\\n    uint256[] values,\\n    string[] signatures,\\n    bytes[] calldatas,\\n    uint256 startBlock,\\n    uint256 endBlock,\\n    string description\\n  );\\n\\n  /// @notice An event emitted when a vote has been cast on a proposal\\n  /// @param voter The address which casted a vote\\n  /// @param proposalId The proposal id which was voted on\\n  /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\n  /// @param votes Number of votes which were cast by the voter\\n  /// @param reason The reason given for the vote by the voter\\n  event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 votes, string reason);\\n\\n  /// @notice An event emitted when a proposal has been canceled\\n  event ProposalCanceled(uint256 id);\\n\\n  /// @notice An event emitted when a proposal has been queued in the Timelock\\n  event ProposalQueued(uint256 id, uint256 eta);\\n\\n  /// @notice An event emitted when a proposal has been executed in the Timelock\\n  event ProposalExecuted(uint256 id);\\n\\n  /// @notice An event emitted when the voting delay is set\\n  event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay);\\n\\n  /// @notice An event emitted when the voting period is set\\n  event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod);\\n\\n  /// @notice Emitted when implementation is changed\\n  event NewImplementation(address oldImplementation, address newImplementation);\\n\\n  /// @notice Emitted when proposal threshold is set\\n  event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold);\\n\\n  /// @notice Emitted when pendingAdmin is changed\\n  event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n  /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\n  event NewAdmin(address oldAdmin, address newAdmin);\\n}\\n\\ncontract GovernorBravoDelegatorStorage {\\n  /// @notice Administrator for this contract\\n  address public admin;\\n\\n  /// @notice Pending administrator for this contract\\n  address public pendingAdmin;\\n\\n  /// @notice Active brains of Governor\\n  address public implementation;\\n}\\n\\n/**\\n * @title Storage for Governor Bravo Delegate\\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\\n * GovernorBravoDelegateStorageVX.\\n */\\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\\n  /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\n  uint256 public votingDelay;\\n\\n  /// @notice The duration of voting on a proposal, in blocks\\n  uint256 public votingPeriod;\\n\\n  /// @notice The number of votes required in order for a voter to become a proposer\\n  uint256 public proposalThreshold;\\n\\n  /// @notice The total number of proposals\\n  uint256 public proposalCount;\\n\\n  /// @notice The address of the Protocol Timelock\\n  TimelockInterface public timelock;\\n\\n  /// @notice The address of the governance token\\n  GovernanceTokenInterface public governanceToken;\\n\\n  /// @notice The official record of all proposals ever proposed\\n  mapping(uint256 => Proposal) public proposals;\\n\\n  /// @notice The latest proposal for each proposer\\n  mapping(address => uint256) public latestProposalIds;\\n\\n  struct Proposal {\\n    /// @notice Unique id for looking up a proposal\\n    uint256 id;\\n    /// @notice Creator of the proposal\\n    address proposer;\\n    /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n    uint256 eta;\\n    /// @notice the ordered list of target addresses for calls to be made\\n    address[] targets;\\n    /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n    uint256[] values;\\n    /// @notice The ordered list of function signatures to be called\\n    string[] signatures;\\n    /// @notice The ordered list of calldata to be passed to each call\\n    bytes[] calldatas;\\n    /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n    uint256 startBlock;\\n    /// @notice The block at which voting ends: votes must be cast prior to this block\\n    uint256 endBlock;\\n    /// @notice Current number of votes in favor of this proposal\\n    uint256 forVotes;\\n    /// @notice Current number of votes in opposition to this proposal\\n    uint256 againstVotes;\\n    /// @notice Current number of votes for abstaining for this proposal\\n    uint256 abstainVotes;\\n    /// @notice Flag marking whether the proposal has been canceled\\n    bool canceled;\\n    /// @notice Flag marking whether the proposal has been executed\\n    bool executed;\\n    /// @notice Receipts of ballots for the entire set of voters\\n    mapping(address => Receipt) receipts;\\n  }\\n\\n  /// @notice Ballot receipt record for a voter\\n  struct Receipt {\\n    /// @notice Whether or not a vote has been cast\\n    bool hasVoted;\\n    /// @notice Whether or not the voter supports the proposal or abstains\\n    uint8 support;\\n    /// @notice The number of votes the voter had, which were cast\\n    uint96 votes;\\n  }\\n\\n  /// @notice Possible states that a proposal may be in\\n  enum ProposalState {\\n    Pending,\\n    Active,\\n    Canceled,\\n    Defeated,\\n    Succeeded,\\n    Queued,\\n    Expired,\\n    Executed\\n  }\\n}\\n\\ninterface TimelockInterface {\\n  function delay() external view returns (uint256);\\n\\n  // solhint-disable-next-line func-name-mixedcase\\n  function GRACE_PERIOD() external view returns (uint256);\\n\\n  function acceptAdmin() external;\\n\\n  function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n  function queueTransaction(\\n    address target,\\n    uint256 value,\\n    string calldata signature,\\n    bytes calldata data,\\n    uint256 eta\\n  ) external returns (bytes32);\\n\\n  function cancelTransaction(\\n    address target,\\n    uint256 value,\\n    string calldata signature,\\n    bytes calldata data,\\n    uint256 eta\\n  ) external;\\n\\n  function executeTransaction(\\n    address target,\\n    uint256 value,\\n    string calldata signature,\\n    bytes calldata data,\\n    uint256 eta\\n  ) external payable returns (bytes memory);\\n}\\n\\ninterface GovernanceTokenInterface {\\n  function getPriorVotes(address account, uint256 blockNumber) external view returns (uint96);\\n}\\n\",\"keccak256\":\"0x69b95adfdbd6cf43e25985ca97019e46e71c9087fdac62ad280ce1d85ef29049\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102255760003560e01c8063791f5d2311610123578063da35c664116100ab578063e48083fe1161006f578063e48083fe14610802578063e9c714f214610817578063f851a4401461082c578063f96dae0a1461084c578063fe0d94c11461086c57600080fd5b8063da35c664146106ae578063da95691a146106c4578063ddf0b009146106e4578063deaaa7cc14610704578063e23a9a521461073857600080fd5b8063b1126263116100f2578063b112626314610622578063b58131b014610638578063b71d1a0c1461064e578063d13f90b41461066e578063d33219b41461068e57600080fd5b8063791f5d23146105b85780637b3c71d3146105d65780637bdbe4d0146105f6578063a64e024a1461060b57600080fd5b806324bc1a64116101b15780633bccf4fd116101755780633bccf4fd1461050b5780633e4f49e61461052b57806340e58ee51461055857806356781388146105785780635c60da1b1461059857600080fd5b806324bc1a641461045157806325fd935a1461046f578063267822471461048d578063328dd982146104c55780633932abb1146104f557600080fd5b806317977c61116101f857806317977c611461039a57806317ba1b8b146103c75780631dfb1b5a146103e757806320606b7014610407578063215809ca1461043b57600080fd5b8063013cf08b1461022a57806302a251a31461030257806306fdde03146103265780630ea2d98c14610378575b600080fd5b34801561023657600080fd5b506102a761024536600461322a565b60096020819052600091825260409091208054600182015460028301546007840154600885015495850154600a860154600b870154600c9097015495976001600160a01b03909516969395929493919290919060ff808216916101009004168a565b604080519a8b526001600160a01b0390991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e084015215156101008301521515610120820152610140015b60405180910390f35b34801561030e57600080fd5b5061031860045481565b6040519081526020016102f9565b34801561033257600080fd5b5061036b604051806040016040528060198152602001784465466948656c70657220476f7665726e6f7220427261766f60381b81525081565b6040516102f9919061362b565b34801561038457600080fd5b5061039861039336600461322a565b61087f565b005b3480156103a657600080fd5b506103186103b536600461303e565b600a6020526000908152604090205481565b3480156103d357600080fd5b506103986103e236600461322a565b6109b8565b3480156103f357600080fd5b5061039861040236600461322a565b610b01565b34801561041357600080fd5b506103187f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b34801561044757600080fd5b5061031861168081565b34801561045d57600080fd5b506103186954b40b1f852bda00000081565b34801561047b57600080fd5b5061031869152d02c7e14af680000081565b34801561049957600080fd5b506001546104ad906001600160a01b031681565b6040516001600160a01b0390911681526020016102f9565b3480156104d157600080fd5b506104e56104e036600461322a565b610c28565b6040516102f994939291906135ab565b34801561050157600080fd5b5061031860035481565b34801561051757600080fd5b50610398610526366004613319565b610eb9565b34801561053757600080fd5b5061054b61054636600461322a565b611138565b6040516102f99190613603565b34801561056457600080fd5b5061039861057336600461322a565b6112fc565b34801561058457600080fd5b5061039861059336600461326f565b61161b565b3480156105a457600080fd5b506002546104ad906001600160a01b031681565b3480156105c457600080fd5b50610318690a968163f0a57b40000081565b3480156105e257600080fd5b506103986105f1366004613292565b611686565b34801561060257600080fd5b50610318600a81565b34801561061757600080fd5b5061031862013b0081565b34801561062e57600080fd5b50610318619d8081565b34801561064457600080fd5b5061031860055481565b34801561065a57600080fd5b5061039861066936600461303e565b6116d6565b34801561067a57600080fd5b50610398610689366004613059565b61179d565b34801561069a57600080fd5b506007546104ad906001600160a01b031681565b3480156106ba57600080fd5b5061031860065481565b3480156106d057600080fd5b506103186106df3660046130a6565b611a70565b3480156106f057600080fd5b506103986106ff36600461322a565b611fdd565b34801561071057600080fd5b506103187f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561074457600080fd5b506107d2610753366004613243565b60408051606081018252600080825260208201819052918101919091525060009182526009602090815260408084206001600160a01b03939093168452600d9092018152918190208151606081018352905460ff8082161515835261010082041693820193909352620100009092046001600160601b03169082015290565b6040805182511515815260208084015160ff1690820152918101516001600160601b0316908201526060016102f9565b34801561080e57600080fd5b50610318600181565b34801561082357600080fd5b5061039861231e565b34801561083857600080fd5b506000546104ad906001600160a01b031681565b34801561085857600080fd5b506008546104ad906001600160a01b031681565b61039861087a36600461322a565b612448565b6000546001600160a01b031633146108f25760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f72427261766f3a3a5f736574566f74696e67506572696f643a60448201526a2061646d696e206f6e6c7960a81b60648201526084015b60405180910390fd5b6116808110158015610907575062013b008111155b6109725760405162461bcd60e51b815260206004820152603660248201527f476f7665726e6f72427261766f3a3a5f736574566f74696e67506572696f643a604482015275081a5b9d985b1a59081d9bdd1a5b99c81c195c9a5bd960521b60648201526084016108e9565b600480549082905560408051828152602081018490527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e882891015b60405180910390a15050565b6000546001600160a01b03163314610a2b5760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f72427261766f3a3a5f73657450726f706f73616c546872657360448201526f686f6c643a2061646d696e206f6e6c7960801b60648201526084016108e9565b690a968163f0a57b4000008110158015610a4f575069152d02c7e14af68000008111155b610ac3576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72427261766f3a3a5f73657450726f706f73616c546872657360448201527f686f6c643a20696e76616c69642070726f706f73616c207468726573686f6c6460648201526084016108e9565b600580549082905560408051828152602081018490527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc0546191016109ac565b6000546001600160a01b03163314610b6e5760405162461bcd60e51b815260206004820152602a60248201527f476f7665726e6f72427261766f3a3a5f736574566f74696e6744656c61793a2060448201526961646d696e206f6e6c7960b01b60648201526084016108e9565b60018110158015610b815750619d808111155b610bea5760405162461bcd60e51b815260206004820152603460248201527f476f7665726e6f72427261766f3a3a5f736574566f74696e6744656c61793a20604482015273696e76616c696420766f74696e672064656c617960601b60648201526084016108e9565b600380549082905560408051828152602081018490527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a9391016109ac565b60608060608060006009600087815260200190815260200160002090508060030181600401826005018360060183805480602002602001604051908101604052809291908181526020018280548015610caa57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c8c575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610cfc57602002820191906000526020600020905b815481526020019060010190808311610ce8575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610dd0578382906000526020600020018054610d4390613802565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6f90613802565b8015610dbc5780601f10610d9157610100808354040283529160200191610dbc565b820191906000526020600020905b815481529060010190602001808311610d9f57829003601f168201915b505050505081526020019060010190610d24565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610ea3578382906000526020600020018054610e1690613802565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4290613802565b8015610e8f5780601f10610e6457610100808354040283529160200191610e8f565b820191906000526020600020905b815481529060010190602001808311610e7257829003601f168201915b505050505081526020019060010190610df7565b5050505090509450945094509450509193509193565b60408051808201825260198152784465466948656c70657220476f7665726e6f7220427261766f60381b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527fa23ea4f8575d811f6bf655653606c6de379b4d56d6b8542b06793571d8fb999181840152466060820152306080808301919091528351808303909101815260a0820184528051908301207f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f60c083015260e0820189905260ff8816610100808401919091528451808403909101815261012083019094528351939092019290922061190160f01b6101408401526101428301829052610162830181905290916000906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015611042573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166110bd5760405162461bcd60e51b815260206004820152602f60248201527f476f7665726e6f72427261766f3a3a63617374566f746542795369673a20696e60448201526e76616c6964207369676e617475726560881b60648201526084016108e9565b806001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48a8a6110f5858e8e612694565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a2505050505050505050565b600081600654101561119e5760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f72427261766f3a3a73746174653a20696e76616c69642070726044820152681bdc1bdcd85b081a5960ba1b60648201526084016108e9565b6000828152600960205260409020600c81015460ff16156111c25750600292915050565b806007015443116111d65750600092915050565b806008015443116111ea5750600192915050565b80600a0154816009015411158061120e57506954b40b1f852bda0000008160090154105b1561121c5750600392915050565b600281015461122e5750600492915050565b600c810154610100900460ff16156112495750600792915050565b600760009054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b815260040160206040518083038186803b15801561129757600080fd5b505afa1580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf919061319a565b81600201546112de91906137a3565b42106112ed5750600692915050565b50600592915050565b50919050565b600761130782611138565b600781111561131857611318613868565b14156113855760405162461bcd60e51b815260206004820152603660248201527f476f7665726e6f72427261766f3a3a63616e63656c3a2063616e6e6f742063616044820152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b60648201526084016108e9565b600081815260096020526040902060018101546001600160a01b031633148061145b57506005546008546001838101546001600160a01b039283169263782d6fe1929116906113d490436137bb565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b15801561141857600080fd5b505afa15801561142c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114509190613367565b6001600160601b0316105b6114bf5760405162461bcd60e51b815260206004820152602f60248201527f476f7665726e6f72427261766f3a3a63616e63656c3a2070726f706f7365722060448201526e18589bdd99481d1a1c995cda1bdb19608a1b60648201526084016108e9565b600c8101805460ff1916600117905560005b60038201548110156115ea576007546003830180546001600160a01b039092169163591fcdfe9190849081106115095761150961387e565b6000918252602090912001546004850180546001600160a01b0390921691859081106115375761153761387e565b90600052602060002001548560050185815481106115575761155761387e565b906000526020600020018660060186815481106115765761157661387e565b9060005260206000200187600201546040518663ffffffff1660e01b81526004016115a5959493929190613572565b600060405180830381600087803b1580156115bf57600080fd5b505af11580156115d3573d6000803e3d6000fd5b5050505080806115e290613837565b9150506114d1565b506040518281527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c906020016109ac565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4838361164a848383612694565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a25050565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda485856116b5848383612694565b86866040516116c89594939291906136d6565b60405180910390a250505050565b6000546001600160a01b031633146117435760405162461bcd60e51b815260206004820152602a60248201527f476f7665726e6f72427261766f3a5f73657450656e64696e6741646d696e3a2060448201526961646d696e206f6e6c7960b01b60648201526084016108e9565b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a991016109ac565b6007546001600160a01b0316156118125760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72427261766f3a3a696e697469616c697a653a2063616e206f6044820152726e6c7920696e697469616c697a65206f6e636560681b60648201526084016108e9565b6001600160a01b0385166118725760405162461bcd60e51b815260206004820152603360248201526000805160206138ab83398151915260448201527269642074696d656c6f636b206164647265737360681b60648201526084016108e9565b6001600160a01b0384166118dc5760405162461bcd60e51b815260206004820152603b60248201526000805160206138ab83398151915260448201527f696420676f7665726e616e636520746f6b656e2061646472657373000000000060648201526084016108e9565b61168083101580156118f1575062013b008311155b6119445760405162461bcd60e51b815260206004820152603060248201526000805160206138ab83398151915260448201526f1a59081d9bdd1a5b99c81c195c9a5bd960821b60648201526084016108e9565b600182101580156119575750619d808211155b6119a95760405162461bcd60e51b815260206004820152602f60248201526000805160206138ab83398151915260448201526e696420766f74696e672064656c617960881b60648201526084016108e9565b690a968163f0a57b40000081101580156119cd575069152d02c7e14af68000008111155b611a255760405162461bcd60e51b815260206004820152603560248201526000805160206138ab8339815191526044820152741a59081c1c9bdc1bdcd85b081d1a1c995cda1bdb19605a1b60648201526084016108e9565b600080546001600160a01b039687166001600160a01b031991821681179092556007805482169092179091556008805495909616941693909317909355600455600391909155600555565b600554600854600091906001600160a01b031663782d6fe133611a946001436137bb565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015611ad857600080fd5b505afa158015611aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b109190613367565b6001600160601b031611611b8c5760405162461bcd60e51b815260206004820152603f60248201527f476f7665726e6f72427261766f3a3a70726f706f73653a2070726f706f73657260448201527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c640060648201526084016108e9565b84518651148015611b9e575083518651145b8015611bab575082518651145b611c2b5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f72427261766f3a3a70726f706f73653a2070726f706f73616c908201527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6064820152630c2e8c6d60e31b608482015260a4016108e9565b8551611c8e5760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e6f72427261766f3a3a70726f706f73653a206d7573742070726f60448201526b7669646520616374696f6e7360a01b60648201526084016108e9565b600a86511115611cf15760405162461bcd60e51b815260206004820152602860248201527f476f7665726e6f72427261766f3a3a70726f706f73653a20746f6f206d616e7960448201526720616374696f6e7360c01b60648201526084016108e9565b336000908152600a60205260409020548015611e72576000611d1282611138565b90506001816007811115611d2857611d28613868565b1415611dc25760405162461bcd60e51b815260206004820152605860248201527f476f7665726e6f72427261766f3a3a70726f706f73653a206f6e65206c69766560448201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60648201527f20616c7265616479206163746976652070726f706f73616c0000000000000000608482015260a4016108e9565b6000816007811115611dd657611dd6613868565b1415611e705760405162461bcd60e51b815260206004820152605960248201527f476f7665726e6f72427261766f3a3a70726f706f73653a206f6e65206c69766560448201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60648201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000608482015260a4016108e9565b505b600060035443611e8291906137a3565b9050600060045482611e9491906137a3565b600680549192506000611ea683613837565b909155505060065460008181526009602090815260409091209182556001820180546001600160a01b031916331790558a51611eea916003840191908d0190612b5d565b508851611f0090600483019060208c0190612bc2565b508751611f1690600583019060208b0190612bfd565b508651611f2c90600683019060208a0190612c56565b508281600701819055508181600801819055508060000154600a60008360010160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000154338c8c8c8c89898e604051611fc79998979695949392919061363e565b60405180910390a1549998505050505050505050565b6004611fe882611138565b6007811115611ff957611ff9613868565b1461207a5760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f72427261766f3a3a71756575653a2070726f706f73616c2063908201527f616e206f6e6c79206265207175657565642069662069742069732073756363656064820152631959195960e21b608482015260a4016108e9565b60008181526009602090815260408083206007548251630d48571f60e31b815292519194936001600160a01b0390911692636a42b8f89260048083019392829003018186803b1580156120cc57600080fd5b505afa1580156120e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612104919061319a565b61210e90426137a3565b905060005b60038301548110156122d8576122c68360030182815481106121375761213761387e565b6000918252602090912001546004850180546001600160a01b0390921691849081106121655761216561387e565b90600052602060002001548560050184815481106121855761218561387e565b90600052602060002001805461219a90613802565b80601f01602080910402602001604051908101604052809291908181526020018280546121c690613802565b80156122135780601f106121e857610100808354040283529160200191612213565b820191906000526020600020905b8154815290600101906020018083116121f657829003601f168201915b505050505086600601858154811061222d5761222d61387e565b90600052602060002001805461224290613802565b80601f016020809104026020016040519081016040528092919081815260200182805461226e90613802565b80156122bb5780601f10612290576101008083540402835291602001916122bb565b820191906000526020600020905b81548152906001019060200180831161229e57829003601f168201915b505050505086612988565b806122d081613837565b915050612113565b506002820181905560408051848152602081018390527f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892910160405180910390a1505050565b6001546001600160a01b03163314801561233757503315155b61239a5760405162461bcd60e51b815260206004820152602e60248201527f476f7665726e6f72427261766f3a5f61636365707441646d696e3a2070656e6460448201526d696e672061646d696e206f6e6c7960901b60648201526084016108e9565b60008054600180546001600160a01b038082166001600160a01b031980861682179096559490911690915560408051919092168082526020820184905292917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a1600154604080516001600160a01b03808516825290921660208301527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a991016109ac565b600561245382611138565b600781111561246457612464613868565b146124e55760405162461bcd60e51b815260206004820152604560248201527f476f7665726e6f72427261766f3a3a657865637574653a2070726f706f73616c60448201527f2063616e206f6e6c7920626520657865637574656420696620697420697320716064820152641d595d595960da1b608482015260a4016108e9565b6000818152600960205260408120600c8101805461ff001916610100179055905b6003820154811015612663576007546004830180546001600160a01b0390921691630825f38f91908490811061253e5761253e61387e565b906000526020600020015484600301848154811061255e5761255e61387e565b6000918252602090912001546004860180546001600160a01b03909216918690811061258c5761258c61387e565b90600052602060002001548660050186815481106125ac576125ac61387e565b906000526020600020018760060187815481106125cb576125cb61387e565b9060005260206000200188600201546040518763ffffffff1660e01b81526004016125fa959493929190613572565b6000604051808303818588803b15801561261357600080fd5b505af1158015612627573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261265091908101906131b3565b508061265b81613837565b915050612506565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f906020016109ac565b600060016126a184611138565b60078111156126b2576126b2613868565b146127195760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a604482015270081d9bdd1a5b99c81a5cc818db1bdcd959607a1b60648201526084016108e9565b60028260ff1611156127885760405162461bcd60e51b815260206004820152603260248201527f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a60448201527120696e76616c696420766f7465207479706560701b60648201526084016108e9565b60008381526009602090815260408083206001600160a01b0388168452600d8101909252909120805460ff161561281e5760405162461bcd60e51b815260206004820152603460248201527f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a604482015273081d9bdd195c88185b1c9958591e481d9bdd195960621b60648201526084016108e9565b600854600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe191612868918b916004016001600160a01b03929092168252602082015260400190565b60206040518083038186803b15801561288057600080fd5b505afa158015612894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128b89190613367565b905060ff85166128e557806001600160601b031683600a01546128db91906137a3565b600a84015561293f565b8460ff166001141561291457806001600160601b0316836009015461290a91906137a3565b600984015561293f565b8460ff166002141561293f57806001600160601b031683600b015461293991906137a3565b600b8401555b81546001600160601b03821662010000026dffffffffffffffffffffffff00001960ff88166101000261ffff199093169290921760011791909116179091559150509392505050565b6007546040516001600160a01b039091169063f2b06537906129b69088908890889088908890602001613526565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016129ea91815260200190565b60206040518083038186803b158015612a0257600080fd5b505afa158015612a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3a9190613178565b15612acb5760405162461bcd60e51b815260206004820152605560248201527f476f7665726e6f72427261766f3a3a71756575654f72526576657274496e746560448201527f726e616c3a206964656e746963616c2070726f706f73616c20616374696f6e20606482015274616c7265616479207175657565642061742065746160581b608482015260a4016108e9565b600754604051633a66f90160e01b81526001600160a01b0390911690633a66f90190612b039088908890889088908890600401613526565b602060405180830381600087803b158015612b1d57600080fd5b505af1158015612b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b55919061319a565b505050505050565b828054828255906000526020600020908101928215612bb2579160200282015b82811115612bb257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612b7d565b50612bbe929150612caf565b5090565b828054828255906000526020600020908101928215612bb2579160200282015b82811115612bb2578251825591602001919060010190612be2565b828054828255906000526020600020908101928215612c4a579160200282015b82811115612c4a5782518051612c3a918491602090910190612cc4565b5091602001919060010190612c1d565b50612bbe929150612d37565b828054828255906000526020600020908101928215612ca3579160200282015b82811115612ca35782518051612c93918491602090910190612cc4565b5091602001919060010190612c76565b50612bbe929150612d54565b5b80821115612bbe5760008155600101612cb0565b828054612cd090613802565b90600052602060002090601f016020900481019282612cf25760008555612bb2565b82601f10612d0b57805160ff1916838001178555612bb2565b82800160010185558215612bb25791820182811115612bb2578251825591602001919060010190612be2565b80821115612bbe576000612d4b8282612d71565b50600101612d37565b80821115612bbe576000612d688282612d71565b50600101612d54565b508054612d7d90613802565b6000825580601f10612d8d575050565b601f016020900490600052602060002090810190612dab9190612caf565b50565b6000612dc1612dbc8461377b565b613726565b9050828152838383011115612dd557600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114612e0357600080fd5b919050565b600082601f830112612e1957600080fd5b81356020612e29612dbc83613757565b80838252828201915082860187848660051b8901011115612e4957600080fd5b60005b85811015612e6f57612e5d82612dec565b84529284019290840190600101612e4c565b5090979650505050505050565b600082601f830112612e8d57600080fd5b81356020612e9d612dbc83613757565b80838252828201915082860187848660051b8901011115612ebd57600080fd5b60005b85811015612e6f57813567ffffffffffffffff811115612edf57600080fd5b8801603f81018a13612ef057600080fd5b612f018a8783013560408401612dae565b8552509284019290840190600101612ec0565b600082601f830112612f2557600080fd5b81356020612f35612dbc83613757565b80838252828201915082860187848660051b8901011115612f5557600080fd5b6000805b86811015612f9857823567ffffffffffffffff811115612f77578283fd5b612f858b88838d0101613006565b8652509385019391850191600101612f59565b509198975050505050505050565b600082601f830112612fb757600080fd5b81356020612fc7612dbc83613757565b80838252828201915082860187848660051b8901011115612fe757600080fd5b60005b85811015612e6f57813584529284019290840190600101612fea565b600082601f83011261301757600080fd5b61302683833560208501612dae565b9392505050565b803560ff81168114612e0357600080fd5b60006020828403121561305057600080fd5b61302682612dec565b600080600080600060a0868803121561307157600080fd5b61307a86612dec565b945061308860208701612dec565b94979496505050506040830135926060810135926080909101359150565b600080600080600060a086880312156130be57600080fd5b853567ffffffffffffffff808211156130d657600080fd5b6130e289838a01612e08565b965060208801359150808211156130f857600080fd5b61310489838a01612fa6565b9550604088013591508082111561311a57600080fd5b61312689838a01612f14565b9450606088013591508082111561313c57600080fd5b61314889838a01612e7c565b9350608088013591508082111561315e57600080fd5b5061316b88828901613006565b9150509295509295909350565b60006020828403121561318a57600080fd5b8151801515811461302657600080fd5b6000602082840312156131ac57600080fd5b5051919050565b6000602082840312156131c557600080fd5b815167ffffffffffffffff8111156131dc57600080fd5b8201601f810184136131ed57600080fd5b80516131fb612dbc8261377b565b81815285602083850101111561321057600080fd5b6132218260208301602086016137d2565b95945050505050565b60006020828403121561323c57600080fd5b5035919050565b6000806040838503121561325657600080fd5b8235915061326660208401612dec565b90509250929050565b6000806040838503121561328257600080fd5b823591506132666020840161302d565b600080600080606085870312156132a857600080fd5b843593506132b86020860161302d565b9250604085013567ffffffffffffffff808211156132d557600080fd5b818701915087601f8301126132e957600080fd5b8135818111156132f857600080fd5b88602082850101111561330a57600080fd5b95989497505060200194505050565b600080600080600060a0868803121561333157600080fd5b853594506133416020870161302d565b935061334f6040870161302d565b94979396509394606081013594506080013592915050565b60006020828403121561337957600080fd5b81516001600160601b038116811461302657600080fd5b600081518084526020808501945080840160005b838110156133c95781516001600160a01b0316875295820195908201906001016133a4565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561341c57828403895261340a848351613459565b988501989350908401906001016133f2565b5091979650505050505050565b600081518084526020808501945080840160005b838110156133c95781518752958201959082019060010161343d565b600081518084526134718160208601602086016137d2565b601f01601f19169290920160200192915050565b8054600090600181811c908083168061349f57607f831692505b60208084108214156134c157634e487b7160e01b600052602260045260246000fd5b8388528180156134d857600181146134ec5761351a565b60ff1986168983015260408901965061351a565b876000528160002060005b868110156135125781548b82018501529085019083016134f7565b8a0183019750505b50505050505092915050565b60018060a01b038616815284602082015260a06040820152600061354d60a0830186613459565b828103606084015261355f8186613459565b9150508260808301529695505050505050565b60018060a01b038616815284602082015260a06040820152600061359960a0830186613485565b828103606084015261355f8186613485565b6080815260006135be6080830187613390565b82810360208401526135d08187613429565b905082810360408401526135e481866133d4565b905082810360608401526135f881856133d4565b979650505050505050565b602081016008831061362557634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006130266020830184613459565b8981526001600160a01b0389166020820152610120604082018190526000906136698382018b613390565b9050828103606084015261367d818a613429565b9050828103608084015261369181896133d4565b905082810360a08401526136a581886133d4565b90508560c08401528460e08401528281036101008401526136c68185613459565b9c9b505050505050505050505050565b85815260ff851660208201526001600160601b038416604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561374f5761374f613894565b604052919050565b600067ffffffffffffffff82111561377157613771613894565b5060051b60200190565b600067ffffffffffffffff82111561379557613795613894565b50601f01601f191660200190565b600082198211156137b6576137b6613852565b500190565b6000828210156137cd576137cd613852565b500390565b60005b838110156137ed5781810151838201526020016137d5565b838111156137fc576000848401525b50505050565b600181811c9082168061381657607f821691505b602082108114156112f657634e487b7160e01b600052602260045260246000fd5b600060001982141561384b5761384b613852565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616ca264697066735822122076952284827fe459a16ebb1248ce9a0729f3a15407dfdf5acbba6fd1d447f05664736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin"
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        }
      },
      "_setProposalThreshold(uint256)": {
        "details": "newProposalThreshold must be greater than the hardcoded min",
        "params": {
          "newProposalThreshold": "new proposal threshold"
        }
      },
      "_setVotingDelay(uint256)": {
        "params": {
          "newVotingDelay": "new voting delay, in blocks"
        }
      },
      "_setVotingPeriod(uint256)": {
        "params": {
          "newVotingPeriod": "new voting period, in blocks"
        }
      },
      "cancel(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to cancel"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "External function that accepts EIP-712 signatures for voting on proposals."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "reason": "The reason given for the vote by the voter",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "execute(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "proposalId": "the id of the proposal"
        },
        "returns": {
          "calldatas": "Calldatas of the proposal actions",
          "signatures": "Signatures of the proposal actions",
          "targets": "Targets of the proposal actions",
          "values": "Values of the proposal actions"
        }
      },
      "getReceipt(uint256,address)": {
        "params": {
          "proposalId": "the id of proposal",
          "voter": "The address of the voter"
        },
        "returns": {
          "_0": "The voting receipt"
        }
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "params": {
          "governanceToken_": "The address of the governance token",
          "proposalThreshold_": "The initial proposal threshold",
          "timelock_": "The address of the Timelock",
          "votingDelay_": "The initial voting delay",
          "votingPeriod_": "The initial voting period"
        }
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "params": {
          "calldatas": "Calldatas for proposal calls",
          "description": "String description of the proposal",
          "signatures": "Function signatures for proposal calls",
          "targets": "Target addresses for proposal calls",
          "values": "Eth values for proposal calls"
        },
        "returns": {
          "_0": "Proposal id of new proposal"
        }
      },
      "queue(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to queue"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "The id of the proposal"
        },
        "returns": {
          "_0": "Proposal state"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is accepted, which means admin is updated"
      },
      "NewImplementation(address,address)": {
        "notice": "Emitted when implementation is changed"
      },
      "NewPendingAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is changed"
      },
      "ProposalCanceled(uint256)": {
        "notice": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "notice": "An event emitted when a new proposal is created"
      },
      "ProposalExecuted(uint256)": {
        "notice": "An event emitted when a proposal has been executed in the Timelock"
      },
      "ProposalQueued(uint256,uint256)": {
        "notice": "An event emitted when a proposal has been queued in the Timelock"
      },
      "ProposalThresholdSet(uint256,uint256)": {
        "notice": "Emitted when proposal threshold is set"
      },
      "VoteCast(address,uint256,uint8,uint256,string)": {
        "notice": "An event emitted when a vote has been cast on a proposal"
      },
      "VotingDelaySet(uint256,uint256)": {
        "notice": "An event emitted when the voting delay is set"
      },
      "VotingPeriodSet(uint256,uint256)": {
        "notice": "An event emitted when the voting period is set"
      }
    },
    "kind": "user",
    "methods": {
      "BALLOT_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the ballot struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "MAX_PROPOSAL_THRESHOLD()": {
        "notice": "The maximum setable proposal threshold"
      },
      "MAX_VOTING_DELAY()": {
        "notice": "The max setable voting delay"
      },
      "MAX_VOTING_PERIOD()": {
        "notice": "The max setable voting period"
      },
      "MIN_PROPOSAL_THRESHOLD()": {
        "notice": "The minimum setable proposal threshold"
      },
      "MIN_VOTING_DELAY()": {
        "notice": "The min setable voting delay"
      },
      "MIN_VOTING_PERIOD()": {
        "notice": "The minimum setable voting period"
      },
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setProposalThreshold(uint256)": {
        "notice": "Admin function for setting the proposal threshold"
      },
      "_setVotingDelay(uint256)": {
        "notice": "Admin function for setting the voting delay"
      },
      "_setVotingPeriod(uint256)": {
        "notice": "Admin function for setting the voting period"
      },
      "admin()": {
        "notice": "Administrator for this contract"
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "notice": "Cast a vote for a proposal by signature"
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal with a reason"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal"
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "governanceToken()": {
        "notice": "The address of the governance token"
      },
      "implementation()": {
        "notice": "Active brains of Governor"
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "notice": "Used to initialize the contract during delegator contructor"
      },
      "latestProposalIds(address)": {
        "notice": "The latest proposal for each proposer"
      },
      "name()": {
        "notice": "The name of this contract"
      },
      "pendingAdmin()": {
        "notice": "Pending administrator for this contract"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "proposals(uint256)": {
        "notice": "The official record of all proposals ever proposed"
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold"
      },
      "queue(uint256)": {
        "notice": "Queues a proposal of state succeeded"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      },
      "timelock()": {
        "notice": "The address of the Protocol Timelock"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed, in blocks"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1384,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1387,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1390,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "implementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1397,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "votingDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1400,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1403,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1406,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1410,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "timelock",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(TimelockInterface)1562"
      },
      {
        "astId": 1414,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "governanceToken",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(GovernanceTokenInterface)1572"
      },
      {
        "astId": 1420,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "proposals",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_struct(Proposal)1478_storage)"
      },
      {
        "astId": 1425,
        "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(GovernanceTokenInterface)1572": {
        "encoding": "inplace",
        "label": "contract GovernanceTokenInterface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)1562": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)1488_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorBravoDelegateStorageV1.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)1488_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)1478_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorBravoDelegateStorageV1.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)1478_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)1478_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Proposal",
        "members": [
          {
            "astId": 1428,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1431,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1434,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1438,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1442,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 1446,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 1450,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 1453,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 1456,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 1459,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 1462,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 1465,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 1468,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "canceled",
            "offset": 0,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 1471,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "executed",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 1477,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "receipts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(Receipt)1488_storage)"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_struct(Receipt)1488_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Receipt",
        "members": [
          {
            "astId": 1481,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1484,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 1487,
            "contract": "contracts/governance/GovernorBravo.sol:GovernorBravo",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}